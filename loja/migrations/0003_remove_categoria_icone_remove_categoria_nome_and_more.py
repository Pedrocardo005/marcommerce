# Generated by Django 4.0.2 on 2022-05-07 11:16

from django.db import migrations, models, transaction
import django.db.models.deletion
import parler.fields
import parler.models


def populate_categorias(apps):
    Categoria = apps.get_model('loja', 'categoria')
    nomes = [
        "Carros e Motocicletas", 
        "Imóveis e Casas", 
        "Casa e Jardim", 
        "Moda e Beleza",
        "Família, Criança e Bebê",
        "Multimídia e Eletrônica",
        "Empregos",
        "Shows e Ingressos",
        "Lazer, Hobby e Diversão",
        "Música, Cinema e Livros",
        "Doação e trocas",
        "Animais",
        "Aulas e Cursos"
        ]
    icones = [
        "fa-motorcycle",
        "fa-home",
        "fa-tree",
        "fa-tag",
        "fa-child",
        "fa-tablet",
        "fa-suitcase",
        "fa-ticket-alt",
        "fa-gamepad",
        "fa-book",
        "fa-handshake",
        "fa-paw",
        "fa-graduation-cap"
    ]
    with transaction.atomic():
        for idx, obj in enumerate(nomes):
            Categoria.objects.create(
                nome = obj,
                icone = icones[idx]
            )


class Migration(migrations.Migration):

    dependencies = [
        ('loja', '0002_alter_categoria_icone_alter_categoria_nome_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='categoria',
            name='icone',
        ),
        migrations.RemoveField(
            model_name='categoria',
            name='nome',
        ),
        migrations.RemoveField(
            model_name='produto',
            name='categoria',
        ),
        migrations.RemoveField(
            model_name='produto',
            name='nome',
        ),
        migrations.RemoveField(
            model_name='produto',
            name='preco',
        ),
        migrations.CreateModel(
            name='ProdutoTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('nome', models.CharField(max_length=255)),
                ('preco', models.FloatField(blank=True, default=0, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loja.categoria')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='loja.produto')),
            ],
            options={
                'verbose_name': 'produto Translation',
                'db_table': 'loja_produto_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases = (parler.models.TranslatableModel, models.Model)
        ),
        migrations.CreateModel(
            name='CategoriaTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('nome', models.CharField(max_length=255)),
                ('icone', models.CharField(max_length=255)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='loja.categoria')),
            ],
            options={
                'verbose_name': 'categoria Translation',
                'db_table': 'loja_categoria_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases = (parler.models.TranslatableModel, models.Model)
        ),
        migrations.RunPython(populate_categorias),
    ]
